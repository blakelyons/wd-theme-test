version: 0.2

phases:
  pre_build:
    commands:
      - echo Starting Docker daemon
      - /usr/local/bin/dockerd-entrypoint.sh
      - echo Logging in to Amazon ECR...
      - ASSUME_ROLE_ARN="arn:aws:iam::$SANDBOX_ACCOUNT_ID:role/Build-CodeBuild-wd_master_theme"
      - TEMP_ROLE=`aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name test`
      - export TEMP_ROLE
      - echo $TEMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')
      - echo $AWS_ACCESS_KEY_ID
      - echo $AWS_SECRET_ACCESS_KEY
      - echo $AWS_SESSION_TOKEN
      - docker login -u accrisoft -p ${DOCKER_TOKEN}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $SANDBOX_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG .
  post_build:
    commands:
      - if [ $CODEBUILD_BUILD_SUCCEEDING -eq 0 ]; then exit 1; fi
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker login --username AWS -p $(aws ecr get-login-password --region $AWS_DEFAULT_REGION) $SANDBOX_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - docker push $SANDBOX_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG